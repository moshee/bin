#!/usr/bin/env ruby
# encoding: utf-8
# Take a list of images which are named by a number (page number) and shift the
# numbers up or down. Handles double pages (matching /(\d+)\-(\d+)/) properly.

require 'flag'

flags = Flags.new do |flag|
  flag.int 'from', 0, 'Beginning file number (from the name)'
  flag.int 'to',   0, 'Intended shift destination index'
  flag.int 'width', 0, 'Filename width to pad to. 0 for auto.'
end

def help
  $stderr.puts 'Usage: renumber -from <m> -to <n> <files...>'
  flags.help
end

from, to = flags['from'], flags['to']

if from.zero? and to.zero?
  help
  exit
end

if from == to
  $stderr.puts 'From and to are the same â€” nothing to do!'
  exit
end

if not flags or flags.args.size < 0
  $stderr.puts 'No files given...'
  help
  exit
end

list = flags.args.sort

def magnitude(n)
  return 1 if n.zero?

  mag = 0
  nn = n.to_f

  while nn >= 1.0
    nn /= 10.0
    mag += 1
  end

  mag
end

class Page
  def initialize(name)
    if m = name.match(/(\d+)\-(\d+)/)
      # is spread
      @low = m[1].to_i
      @high = m[2].to_i
      @kind = :spread
    elsif name.match(/^\d+/)
      # is regular numbered page
      @low = name[/^\d+/].to_i
      @kind = :page
    else
      # isn't any known numbered page
      @kind = ignore
    end

    @filename = name
    @ext = File.extname(name)
  end

  attr_reader :filename, :kind

  def add(delta, mag)
    case @kind
    when :spread
      low =  (@low  + delta).to_s.rjust(mag, '0')
      high = (@high + delta).to_s.rjust(mag, '0')
      "#{low}-#{high}#{@ext}"
    when :page
      (@low + delta).to_s.rjust(mag, '0') + @ext
    end
  end
end

pages = list.drop_while { |filename| filename[/^\d+/].to_i < from } # drop pages up to the lower bound
  .map { |filename| Page.new filename } # generate list of Page objects
  .select { |page| page.kind != :ignore } # ignore pages that aren't numbered in a known way

if flags['width'].zero?
  mag = magnitude list.size
else
  mag = flags['width']
end

delta = to - from

block = ->(page) do
  #puts "moving #{page.filename} to #{page.add delta, mag}"
  #system "mv \"#{page.filename}\" \"#{page.add delta, mag}\"" or exit 1
  File.rename(page.filename, page.add(delta, mag))
end

# if the numbers are shifting upwards, we want to go backwards or else they'd
# all overwrite the same file one by one. Otherwise go forwards for the same
# reason.
if delta < 0
  pages.each &block
else
  pages.reverse_each &block
end
